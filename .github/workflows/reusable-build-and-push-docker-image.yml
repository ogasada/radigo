name: Reusable Build and Push Docker Image

on:
  workflow_call:
    inputs:
      version_file_path:
        required: true
        type: string
      working_dir_path:
        required: true
        type: string
      registry:
        required: true
        type: string
        default: ghcr.io

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.registry }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract version
      id: extract_version
      run: |
        IMAGE_NAME=$(grep 'image_name' ${{ inputs.version_file_path }} | cut -d'=' -f2)
        VERSION=$(grep 'image_version' ${{ inputs.version_file_path }} | cut -d'=' -f2)
        IMAGE_FULL_NAME=${{ inputs.registry }}/${{ github.repository }}/$IMAGE_NAME
        echo "IMAGE_FULL_NAME=$IMAGE_FULL_NAME" >> $GITHUB_OUTPUT
        echo "IMAGE_VERSION=$VERSION" >> $GITHUB_OUTPUT

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ steps.extract_version.outputs.IMAGE_FULL_NAME }}
        tags: |
          type=raw,value=${{ steps.extract_version.outputs.IMAGE_VERSION }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: ${{ inputs.working_dir_path }}
        file: ${{ inputs.working_dir_path }}/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64
        